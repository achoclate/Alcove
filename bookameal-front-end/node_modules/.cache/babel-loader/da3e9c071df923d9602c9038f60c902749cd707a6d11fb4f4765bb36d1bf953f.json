{"ast":null,"code":"var _jsxFileName = \"/home/achoclate/BookaMeal/bookameal-front-end/src/Admin/pages/Reservations/ReservationsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport \"./reservationsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReservationsList() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/reservations\");\n        console.log(response.data); // Debugging line\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching reservations\", error);\n      }\n    };\n    fetchReservations();\n  }, []);\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100\n  }, {\n    field: \"guest_count\",\n    headerName: \"Guests\",\n    width: 150\n  },\n  // Changed Party Size to Guests\n  {\n    field: \"date\",\n    headerName: \"Date\",\n    width: 200\n  }, {\n    field: \"time\",\n    headerName: \"Time\",\n    width: 150\n  }];\n\n  // Map data to include id and fields expected by DataGrid\n  const rows = data.map(reservation => ({\n    id: reservation.id,\n    guest_count: reservation.guest_count,\n    date: reservation.date,\n    time: reservation.time\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservationsListContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reservationsList\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 8,\n        autoHeight: true,\n        disableSelectionOnClick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ReservationsList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ReservationsList;\nvar _c;\n$RefreshReg$(_c, \"ReservationsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","DataGrid","jsxDEV","_jsxDEV","ReservationsList","_s","data","setData","fetchReservations","response","get","console","log","error","columns","field","headerName","width","rows","map","reservation","id","guest_count","date","time","className","children","pageSize","autoHeight","disableSelectionOnClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/achoclate/BookaMeal/bookameal-front-end/src/Admin/pages/Reservations/ReservationsList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport \"./reservationsList.css\";\n\nexport default function ReservationsList() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/reservations\");\n        console.log(response.data); // Debugging line\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching reservations\", error);\n      }\n    };\n\n    fetchReservations();\n  }, []);\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 100 },\n    { field: \"guest_count\", headerName: \"Guests\", width: 150 }, // Changed Party Size to Guests\n    { field: \"date\", headerName: \"Date\", width: 200 },\n    { field: \"time\", headerName: \"Time\", width: 150 },\n  ];\n\n  // Map data to include id and fields expected by DataGrid\n  const rows = data.map(reservation => ({\n    id: reservation.id,\n    guest_count: reservation.guest_count,\n    date: reservation.date,\n    time: reservation.time,\n  }));\n\n  return (\n    <div className=\"reservationsListContainer\">\n      <div className=\"reservationsList\">\n        <DataGrid\n          rows={rows}\n          columns={columns}\n          pageSize={8}\n          autoHeight\n          disableSelectionOnClick\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;QACtEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACH,IAAI,CAAC,CAAC,CAAC;QAC5BC,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC7C;IAAEF,KAAK,EAAE,aAAa;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC;EAAE;EAC5D;IAAEF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EACjD;IAAEF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,CAClD;;EAED;EACA,MAAMC,IAAI,GAAGZ,IAAI,CAACa,GAAG,CAACC,WAAW,KAAK;IACpCC,EAAE,EAAED,WAAW,CAACC,EAAE;IAClBC,WAAW,EAAEF,WAAW,CAACE,WAAW;IACpCC,IAAI,EAAEH,WAAW,CAACG,IAAI;IACtBC,IAAI,EAAEJ,WAAW,CAACI;EACpB,CAAC,CAAC,CAAC;EAEH,oBACErB,OAAA;IAAKsB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCvB,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BvB,OAAA,CAACF,QAAQ;QACPiB,IAAI,EAAEA,IAAK;QACXJ,OAAO,EAAEA,OAAQ;QACjBa,QAAQ,EAAE,CAAE;QACZC,UAAU;QACVC,uBAAuB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA7CuBD,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}